let { Node, Field, generateNodes } = require('./nodeGenerator.js')();

const nodes = [
  //region core
  new Node('event set', 'core', {
    fields: [
      //new Field('Event name'),
      new Field('filter', { types: "jsonata" }),
    ],
    icon: "font-awesome/fa-cogs",
    rwb: 'WB'
  }),



  //region Playwright
  new Node('click', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
    ],
    icon: "font-awesome/fa-mouse-pointer",
  }),

  new Node('type', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
      new Field('text')
    ],
    icon: "font-awesome/fa-keyboard-o"
  }),

  new Node('fill', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
      new Field('text')
    ],
    icon: "font-awesome/fa-keyboard-o"
  }),

  new Node('navigate', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('url'),
    ],
    icon: "font-awesome/fa-arrow-right"
  }),

  new Node('wait for timeout', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('timeout', { types: ['num'] }),
    ],
    icon: "font-awesome/fa-clock-o"
  }),

  new Node('keyboard up', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('key'),
    ],
    icon: "font-awesome/fa-keyboard-o"
  }),

  new Node('wait for selector', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
    ],
    icon: "font-awesome/fa-clock-o"
  }),

  new Node('screenshot', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('path'),
    ],
    icon: "font-awesome/fa-camera"
  }),


  new Node('select option', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
      new Field('value'),
    ],
    icon: "font-awesome/fa-mouse-pointer"
  }),

  new Node('check', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
    ],
    icon: "font-awesome/fa-check"
  }),

  new Node('uncheck', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
    ],
    icon: "font-awesome/fa-times"
  }),


  new Node('keyboard press', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('key'),
    ],
    icon: "font-awesome/fa-keyboard-o"
  }),

  new Node('keyboard down', 'Playwright', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('key'),
    ],
    icon: "font-awesome/fa-keyboard-o"
  }),


  // Region Playwright Assertions

  new Node('assert is enabled', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('locator'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert is checked', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('locator'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert is not checked', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('locator'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert is visible', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('locator'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert is not visible', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('locator'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert text', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('locator'),
      new Field('text'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert value', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('locator'),
      new Field('value'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert title', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('title'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert url', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('url'),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert count', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('locator'),
      new Field('count', { types: ['num'] }),
    ], icon: "font-awesome/fa-check"
  }),

  new Node('assert not on page', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
    ],
    icon: "font-awesome/fa-not-equal"
  }),

  new Node('assert is disabled', 'Playwright Assertions', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['playwright', '', ''] }),
      new Field('page', { types: "msg", defaultValue: ['page', 'undefined'] }),
      new Field('locator'),
    ],
    icon: "font-awesome/fa-ban"
  }),




  // Region PrestaShop


  // new Node('checkout', 'PrestaShop', { fields: [new Field('session_name')], icon: "font-awesome/fa-shopping-cart" }),
  new Node('admin login', 'PrestaShop', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['prestashop', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('username'),
      new Field('password'),
    ], icon: "font-awesome/fa-sign-in"
  }),
  // new Node('admin delete product', 'PrestaShop', {
  //   fields: [
  //     new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
  //     new Field('product_id'),
  //   ], icon: "font-awesome/fa-minus"
  // }),
  new Node('mark in stock', 'PrestaShop', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['prestashop', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('product'),
      //new Field('stock', { types: ['num'] }),
    ], icon: "font-awesome/fa-th"
  }),
  new Node('mark out of stock', 'PrestaShop', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['prestashop', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('product'),
    ], icon: "font-awesome/fa-th"
  }),



  new Node('end of action', 'core', {
    fields: [
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
    ],
    icon: "font-awesome/fa-stop"
  }),



  new Node('Varify not in stock', 'PrestaShop', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['prestashop', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('category'),
      new Field('product'),
    ], icon: "font-awesome/fa-th"
  }),



  /// Region PrestaShop Actions



  new Node('add to cart', 'PrestaShop', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['prestashop', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('category'),
      new Field('product'),
      new Field('quantity', { types: ['num'] }),
      new Field('opt', { types: ['jsonata'] }),//{ types: ['jsonata'], defaultValue: ['{"name": "Size", "value": "L"}', 'undefined'] }),
      new Field('like'),
    ], icon: "font-awesome/fa-cart-plus"
  }),

  new Node('logout', 'PrestaShop', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['prestashop', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
    ], icon: "font-awesome/fa-sign-in"
  }),
  new Node('login', 'PrestaShop', {
    fields: [
      new Field('lib', { hidden: true, defaultValue: ['prestashop', '', ''] }),
      new Field('page', { types: ["msg", "jsonata", "str"], defaultValue: ['page', 'undefined', 'undefined'] }),
      new Field('username'),
      new Field('password'),
    ], icon: "font-awesome/fa-sign-in"
  }),


  //endregion

  // //region Hot-Cold
  // new Node('hot', 'HotCold', { 
  //   icon: "font-awesome/fa-fire",
  //   fields: [
  //     new Field('temperature', { types: ['num'] }),
  //   ]
  // }),
  // new Node('cold', 'HotCold', { 
  //   icon: "font-awesome/fa-snowflake-o",
  //   fields: [
  //     new Field('temperature', { types: ['num'] }),
  //   ]
  // }),

  // new Node('hot room', 'HotCold', { fields: [new Field('Room ID')], icon: "font-awesome/fa-fire" }),
  // new Node('cold room', 'HotCold', { fields: [new Field('Room ID')], icon: "font-awesome/fa-snowflake-o" }),
  // new Node('vacuum', 'HotCold', { icon: "font-awesome/fa-eraser" }),
  // new Node('time', 'HotCold', { fields: [new Field('time')], icon: "font-awesome/fa-clock-o" }),


  // //endregion

  //region TicTacToe
  // new Node('XWin', 'TicTacToe', { icon: "font-awesome/fa-trophy" }),
  // new Node('OWin', 'TicTacToe', { icon: "font-awesome/fa-trophy" }),
  // new Node('Draw', 'TicTacToe', { icon: "font-awesome/fa-handshake-o" }),
  // new Node('X', 'TicTacToe', {
  //   fields: [
  //     new Field('i', { types: ['num'] }),
  //     new Field('j', { types: ['num'] })
  //   ],
  //   icon: "font-awesome/fa-times"
  // }),
  // new Node('O', 'TicTacToe', {
  //   fields: [
  //     new Field('i', { types: ['num'] }),
  //     new Field('j', { types: ['num'] })
  //   ], icon: "font-awesome/fa-circle-thin"
  // }),


  // //endregion
];

generateNodes(nodes);